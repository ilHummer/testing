! function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("rb_wixui.corvid[VectorImage]", [], t) : "object" == typeof exports ? exports["rb_wixui.corvid[VectorImage]"] = t() : e["rb_wixui.corvid[VectorImage]"] = t()
}("undefined" != typeof self ? self : this, (function() {
    return function(e) {
        function t(t) {
            for (var n, l, i = t[0], u = t[1], s = t[2], h = 0, f = []; h < i.length; h++) l = i[h], Object.prototype.hasOwnProperty.call(o, l) && o[l] && f.push(o[l][0]), o[l] = 0;
            for (n in u) Object.prototype.hasOwnProperty.call(u, n) && (e[n] = u[n]);
            for (c && c(t); f.length;) f.shift()();
            return a.push.apply(a, s || []), r()
        }

        function r() {
            for (var e, t = 0; t < a.length; t++) {
                for (var r = a[t], n = !0, i = 1; i < r.length; i++) {
                    var u = r[i];
                    0 !== o[u] && (n = !1)
                }
                n && (a.splice(t--, 1), e = l(l.s = r[0]))
            }
            return e
        }
        var n = {},
            o = {
                119: 0
            },
            a = [];

        function l(t) {
            if (n[t]) return n[t].exports;
            var r = n[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return e[t].call(r.exports, r, r.exports, l), r.l = !0, r.exports
        }
        l.m = e, l.c = n, l.d = function(e, t, r) {
            l.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            })
        }, l.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, l.t = function(e, t) {
            if (1 & t && (e = l(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if (l.r(r), Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e
                }), 2 & t && "string" != typeof e)
                for (var n in e) l.d(r, n, function(t) {
                    return e[t]
                }.bind(null, n));
            return r
        }, l.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return l.d(t, "a", t), t
        }, l.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, l.p = "https://static.parastorage.com/services/editor-elements/dist/";
        var i = ("undefined" != typeof self ? self : this).webpackJsonp__wix_editor_elements_library = ("undefined" != typeof self ? self : this).webpackJsonp__wix_editor_elements_library || [],
            u = i.push.bind(i);
        i.push = t, i = i.slice();
        for (var s = 0; s < i.length; s++) t(i[s]);
        var c = u;
        return a.push([4180, 2]), r()
    }({
        1: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, "__extends", (function() {
                return o
            })), r.d(t, "__assign", (function() {
                return a
            })), r.d(t, "__rest", (function() {
                return l
            })), r.d(t, "__decorate", (function() {
                return i
            })), r.d(t, "__param", (function() {
                return u
            })), r.d(t, "__metadata", (function() {
                return s
            })), r.d(t, "__awaiter", (function() {
                return c
            })), r.d(t, "__generator", (function() {
                return h
            })), r.d(t, "__createBinding", (function() {
                return f
            })), r.d(t, "__exportStar", (function() {
                return g
            })), r.d(t, "__values", (function() {
                return d
            })), r.d(t, "__read", (function() {
                return p
            })), r.d(t, "__spread", (function() {
                return v
            })), r.d(t, "__spreadArrays", (function() {
                return y
            })), r.d(t, "__spreadArray", (function() {
                return b
            })), r.d(t, "__await", (function() {
                return m
            })), r.d(t, "__asyncGenerator", (function() {
                return k
            })), r.d(t, "__asyncDelegator", (function() {
                return w
            })), r.d(t, "__asyncValues", (function() {
                return $
            })), r.d(t, "__makeTemplateObject", (function() {
                return x
            })), r.d(t, "__importStar", (function() {
                return A
            })), r.d(t, "__importDefault", (function() {
                return M
            })), r.d(t, "__classPrivateFieldGet", (function() {
                return S
            })), r.d(t, "__classPrivateFieldSet", (function() {
                return O
            }));
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } || function(e, t) {
                        for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r])
                    })(e, t)
            };

            function o(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");

                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var a = function() {
                return (a = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var o in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                    return e
                }).apply(this, arguments)
            };

            function l(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                    var o = 0;
                    for (n = Object.getOwnPropertySymbols(e); o < n.length; o++) t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]])
                }
                return r
            }

            function i(e, t, r, n) {
                var o, a = arguments.length,
                    l = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) l = Reflect.decorate(e, t, r, n);
                else
                    for (var i = e.length - 1; i >= 0; i--)(o = e[i]) && (l = (a < 3 ? o(l) : a > 3 ? o(t, r, l) : o(t, r)) || l);
                return a > 3 && l && Object.defineProperty(t, r, l), l
            }

            function u(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function s(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function c(e, t, r, n) {
                return new(r || (r = Promise))((function(o, a) {
                    function l(e) {
                        try {
                            u(n.next(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function i(e) {
                        try {
                            u(n.throw(e))
                        } catch (e) {
                            a(e)
                        }
                    }

                    function u(e) {
                        var t;
                        e.done ? o(e.value) : (t = e.value, t instanceof r ? t : new r((function(e) {
                            e(t)
                        }))).then(l, i)
                    }
                    u((n = n.apply(e, t || [])).next())
                }))
            }

            function h(e, t) {
                var r, n, o, a, l = {
                    label: 0,
                    sent: function() {
                        if (1 & o[0]) throw o[1];
                        return o[1]
                    },
                    trys: [],
                    ops: []
                };
                return a = {
                    next: i(0),
                    throw: i(1),
                    return: i(2)
                }, "function" == typeof Symbol && (a[Symbol.iterator] = function() {
                    return this
                }), a;

                function i(a) {
                    return function(i) {
                        return function(a) {
                            if (r) throw new TypeError("Generator is already executing.");
                            for (; l;) try {
                                if (r = 1, n && (o = 2 & a[0] ? n.return : a[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, a[1])).done) return o;
                                switch (n = 0, o && (a = [2 & a[0], o.value]), a[0]) {
                                    case 0:
                                    case 1:
                                        o = a;
                                        break;
                                    case 4:
                                        return l.label++, {
                                            value: a[1],
                                            done: !1
                                        };
                                    case 5:
                                        l.label++, n = a[1], a = [0];
                                        continue;
                                    case 7:
                                        a = l.ops.pop(), l.trys.pop();
                                        continue;
                                    default:
                                        if (!(o = l.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== a[0] && 2 !== a[0])) {
                                            l = 0;
                                            continue
                                        }
                                        if (3 === a[0] && (!o || a[1] > o[0] && a[1] < o[3])) {
                                            l.label = a[1];
                                            break
                                        }
                                        if (6 === a[0] && l.label < o[1]) {
                                            l.label = o[1], o = a;
                                            break
                                        }
                                        if (o && l.label < o[2]) {
                                            l.label = o[2], l.ops.push(a);
                                            break
                                        }
                                        o[2] && l.ops.pop(), l.trys.pop();
                                        continue
                                }
                                a = t.call(e, l)
                            } catch (e) {
                                a = [6, e], n = 0
                            } finally {
                                r = o = 0
                            }
                            if (5 & a[0]) throw a[1];
                            return {
                                value: a[0] ? a[1] : void 0,
                                done: !0
                            }
                        }([a, i])
                    }
                }
            }
            var f = Object.create ? function(e, t, r, n) {
                void 0 === n && (n = r), Object.defineProperty(e, n, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            };

            function g(e, t) {
                for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || f(t, e, r)
            }

            function d(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function p(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, o, a = r.call(e),
                    l = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = a.next()).done;) l.push(n.value)
                } catch (e) {
                    o = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = a.return) && r.call(a)
                    } finally {
                        if (o) throw o.error
                    }
                }
                return l
            }

            function v() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(p(arguments[t]));
                return e
            }

            function y() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                var n = Array(e),
                    o = 0;
                for (t = 0; t < r; t++)
                    for (var a = arguments[t], l = 0, i = a.length; l < i; l++, o++) n[o] = a[l];
                return n
            }

            function b(e, t) {
                for (var r = 0, n = t.length, o = e.length; r < n; r++, o++) e[o] = t[r];
                return e
            }

            function m(e) {
                return this instanceof m ? (this.v = e, this) : new m(e)
            }

            function k(e, t, r) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var n, o = r.apply(e, t || []),
                    a = [];
                return n = {}, l("next"), l("throw"), l("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function l(e) {
                    o[e] && (n[e] = function(t) {
                        return new Promise((function(r, n) {
                            a.push([e, t, r, n]) > 1 || i(e, t)
                        }))
                    })
                }

                function i(e, t) {
                    try {
                        (r = o[e](t)).value instanceof m ? Promise.resolve(r.value.v).then(u, s) : c(a[0][2], r)
                    } catch (e) {
                        c(a[0][3], e)
                    }
                    var r
                }

                function u(e) {
                    i("next", e)
                }

                function s(e) {
                    i("throw", e)
                }

                function c(e, t) {
                    e(t), a.shift(), a.length && i(a[0][0], a[0][1])
                }
            }

            function w(e) {
                var t, r;
                return t = {}, n("next"), n("throw", (function(e) {
                    throw e
                })), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, o) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: m(e[n](t)),
                            done: "return" === n
                        } : o ? o(t) : t
                    } : o
                }
            }

            function $(e) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = d(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise((function(n, o) {
                            (function(e, t, r, n) {
                                Promise.resolve(n).then((function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }), t)
                            })(n, o, (t = e[r](t)).done, t.value)
                        }))
                    }
                }
            }

            function x(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }
            var _ = Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            };

            function A(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && f(t, e, r);
                return _(t, e), t
            }

            function M(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function S(e, t, r, n) {
                if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
                if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
                return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
            }

            function O(e, t, r, n, o) {
                if ("m" === n) throw new TypeError("Private method is not writable");
                if ("a" === n && !o) throw new TypeError("Private accessor was defined without a setter");
                if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
                return "a" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r
            }
        },
        1193: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.buildSvgUrlFactory = t.getCSSStrokeAdjustments = t.getCSSDropShadow = t.encodeSVG = t.getSvgContentForMask = t.getScaledSvgViewBox = t.getFilter = t.removeWidthAndHeight = t.parseSvgString = t.getShapeDividerImageCss = t.transformVectorImage = t.getFontFamilyFontsFromSvg = void 0;
            const n = r(1),
                o = r(2622),
                a = r(2630);
            Object.defineProperty(t, "getFilter", {
                enumerable: !0,
                get: function() {
                    return a.getFilter
                }
            });
            const l = r(2634);
            Object.defineProperty(t, "parseSvgString", {
                enumerable: !0,
                get: function() {
                    return l.parseSvgString
                }
            });
            const i = (0, n.__importDefault)(r(1441)),
                u = r(2635),
                s = /(viewBox=")([^"]*)(")/i,
                c = /(preserveAspectRatio=")([^"]*)(")/i,
                h = /(?:<svg[^>]*)\s(width="[^"]*")/i,
                f = /(?:<svg[^>]*)\s(height="[^"]*")/i,
                g = /(<svg[^>]*)(>)/,
                d = /fill="(.*?)"/gi,
                p = /style="([^"]*)"/i,
                v = /transform:([^;]*)/i,
                y = "tint",
                b = "color",
                m = "ugc";
            const k = /[\r\n%#()<>?[\\\]^`{|}]/g;

            function w(e) {
                return `url("data:image/svg+xml,${e.replace(/"/g,"'").replace(/>\s+</g,"><").replace(/\s{2,}/g," ").replace(k,encodeURIComponent)}")`
            }

            function $(e, t) {
                if (e) {
                    const r = e.match(h),
                        n = e.match(f);
                    if (r && r.length > 1 && (e = e.replace(r[1], 'width="100%"')), n && n.length > 1 && (e = e.replace(n[1], 'height="100%"')), t && (!r || !n)) {
                        const o = t,
                            a = o.width ? ` width="${o.width}"` : ' width="100%"',
                            l = o.height ? ` height="${o.height}"` : ' height="100%"';
                        e = e.replace(g, `$1${r?"":a}${n?"":l}$2`)
                    }
                }
                return e
            }

            function x(e, t, r) {
                const n = r ? 'role="img"' : function(e = !1) {
                        const t = {
                            role: "presentation",
                            "aria-hidden": "true"
                        };
                        return e ? Object.entries(t).map(([e, t]) => `${e}=${t}`).join(" ") : t
                    }(!0),
                    o = e.replace(g, `$1 ${n}$2`);
                if ("string" == typeof r) {
                    const e = t + "-svgtitle";
                    return o.replace(g, `$1 aria-labelledby="${e}"$2<title id="${e}">${a=r,a.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;")}</title>`)
                }
                var a;
                return o
            }

            function _(e, t, r, n, o) {
                return (0, a.getShadow)(e, Object.assign(Object.assign({}, t), {
                    color: n,
                    mergeGraphic: o
                })).replace(/<filter /, `<filter ${function(e,t){const{blurRadius:r,x:n,y:o}=t,a=6*r;let l=`
                    x = "${Math.min(0,n)-a/2}"
                    y = "${Math.min(0,o)-a/2}"
                    `;if(null!=e){l+=`
                    width = "${e.width+a+Math.abs(n)}"
                    height = "${e.height+a+Math.abs(o)}"
                    `}return l}(r,t)} filterUnits="userSpaceOnUse" `)
            }

            function A(e, t, r = {}) {
                var n;
                if (e) {
                    const {
                        svgType: o,
                        viewBox: a,
                        bbox: l
                    } = t, {
                        preserveViewBox: i,
                        displayMode: u,
                        aspectRatio: h
                    } = r, f = h || ("stretch" === u ? "none" : "xMidYMid meet");
                    let d = null === (n = e.match(g)) || void 0 === n ? void 0 : n[0];
                    if (!d) return e;
                    e = c.test(d) ? e.replace(d, d.replace(c, `$1${f}$3`)) : e.replace(/<svg/, `<svg preserveAspectRatio="${f}"`), s.test(d) || (o === m && a && (e = e.replace(/<svg/, `<svg viewBox="${a}"`)), o !== m && l && (e = e.replace(/<svg/, `<svg viewBox="${l}"`))), o !== m && !i && l && (d = e.match(g)[0], e = e.replace(d, d.replace(s, `$1${l}$3`)))
                }
                return e
            }
            t.encodeSVG = w, t.removeWidthAndHeight = $, t.getScaledSvgViewBox = A, t.getCSSDropShadow = function(e, t) {
                if (e && e.color && e.opacity) {
                    const r = (0, o.getFromColorMap)(e.color, t),
                        n = Math.round(255 * e.opacity).toString(16);
                    return `drop-shadow(${e.x}px ${e.y}px ${e.blurRadius}px ${r}${n.padStart(2,"0")})`
                }
                return ""
            }, t.getCSSStrokeAdjustments = function(e) {
                return e ? {
                    svgCalculatedPadding: `${Math.floor(e/2)}px ${Math.ceil(e/2)}px ${Math.ceil(e/2)}px ${Math.floor(e/2)}px`,
                    svgCalculatedWidth: `calc(100% - ${e}px)`,
                    svgCalculatedHeight: `calc(100% - ${e}px)`
                } : {}
            };
            const M = {
                x: "scale(-1, 1)",
                y: "scale(1, -1)",
                xy: "scale(-1, -1)",
                none: ""
            };

            function S(e, t) {
                return e && t ? e.replace(/(<svg[^>]*>)/, `$1<defs><style>${t}</style></defs>`) : e
            }
            t.getSvgContentForMask = function(e, t, r) {
                return function(e, t) {
                    const r = e.match(g),
                        n = M[t] || "";
                    if (r && n) {
                        const t = r[0].match(p);
                        let o = `$1 style="transform: ${n};"$2`;
                        if (t) {
                            const e = t[1].match(v);
                            o = e ? r[0].replace(t[0], t[0].replace(e[0], `transform: ${n} ${e[1]}`)) : r[0].replace(t[0], `style="transform: ${n}; ${t[1]}"`)
                        }
                        return e.replace(g, o)
                    }
                    return e
                }(A(e, t, {
                    displayMode: "stretch"
                }), r)
            };
            t.transformVectorImage = (e, {
                altText: t,
                compId: r,
                svgInfo: n,
                properties: a,
                layout: l,
                shadow: s,
                isResponsive: c,
                colorsMap: h,
                overrideColors: f
            }) => {
                const g = (p = f || {}, Object.keys(p).reduce((e, t) => {
                    const r = p[t];
                    return ((0, o.isColor)(r) || (0, o.isThemeColor)(r)) && (e[t] = r), e
                }, {}));
                var p;
                const v = function(e) {
                    return A(e, n, a)
                }(function(e) {
                    const t = g && g.color1 || "#242323",
                        r = (0, o.getFromColorMap)(t, h);
                    return n.svgType === y ? function(e, t) {
                        const r = (0, i.default)(t);
                        return e.replace(d, (e, t) => {
                            if ("none" === t) return 'fill="none"';
                            const n = (0, i.default)(t);
                            if ((0, o.isGreyscale)(n)) {
                                const e = 1 - (255 - n.red()) / 255,
                                    t = Math.floor(r.red() + (255 - r.red()) * e),
                                    o = Math.floor(r.green() + (255 - r.green()) * e),
                                    a = Math.floor(r.blue() + (255 - r.blue()) * e);
                                return `fill="${(0,i.default)({r:t,g:o,b:a}).hex().toString()}"`
                            }
                            return `fill="${t}"`
                        })
                    }(e, r) : e
                }(x(e, r, t)));
                return function(e) {
                    if (n.svgType === b && Object.keys(g).length > 0) {
                        return S(e, Object.entries(g).map(([e, t]) => {
                            const n = (0, o.getFromColorMap)(t, h),
                                a = e.replace("color", "");
                            return `${(0,u.compIdToCssSelector)(r,!0)} svg [data-color="${a}"] {fill: ${n};}`
                        }).join("\n"))
                    }
                    return e
                }(c ? v : function(e) {
                    return function({
                        compId: e,
                        svgString: t,
                        layout: r,
                        colorsMap: n,
                        shadow: a,
                        shadowOnly: l = !1
                    }) {
                        if (a && a.color) {
                            const i = e + "-shadow";
                            return `\n          <svg height="100%" width="100%">\n              <defs>${_(i,a,r,(0,o.getFromColorMap)(a.color,n),!l)}</defs>\n              <g filter="url(#${i})">\n                  ${$(t)}\n              </g>\n          </svg>\n      `
                        }
                        return t
                    }({
                        compId: r,
                        svgString: e,
                        layout: c ? null : l,
                        colorsMap: h,
                        shadow: s
                    })
                }(v))
            };
            t.getShapeDividerImageCss = (e, {
                color: t,
                opacity: r,
                height: n,
                keepAspectRatio: o,
                compId: a,
                side: l,
                shouldRepeat: i,
                repeatCount: u,
                shouldInvert: s,
                svgInfo: c
            }) => {
                const h = o ? i ? "xMinYMax meet" : "xMidYMax slice" : "none",
                    f = function(e, t = {}) {
                        const {
                            svgType: r,
                            viewBox: n,
                            bbox: o
                        } = e, {
                            preserveViewBox: a
                        } = t;
                        return r !== m && !a && o ? o : n
                    }(c);
                if (!e || !f) return {
                    image: e ? w(e) : ""
                };
                const [d, p, v, y] = f.split(" ").map(e => parseFloat(e)), b = `${d} ${p} ${v} ${y}`, k = A(e, {
                    svgType: c.svgType,
                    bbox: b,
                    viewBox: b
                }, {
                    aspectRatio: h
                }), x = `${a}-${l}`, _ = k.replace(/^(.*\s*)<svg/, "<svg").replace(/<\/svg>(\s*)$/, "</svg>");
                const M = s ? function(e, t, r, n, o) {
                        var a, l;
                        const i = (null === (a = e.match(/(<path)[^>]*>/)) || void 0 === a ? void 0 : a[1]) || "",
                            u = (null === (l = e.match(/<path.*\s*d="([^"]+)"/)) || void 0 === l ? void 0 : l[1]) || "",
                            s = `M${t},${r-1} h${n} v${o+1} h${-n} Z`;
                        return e.replace(u, `${u} ${s}`).replace(i, i + ' fill-rule="evenodd"')
                    }(_, d, p, v, y) : _,
                    O = `${s?`#${x} > g { transform: scaleY(-1) translateY(${-(2*p+y)}px); } `:""}#${x} { opacity: ${r}; } #${x}${"color"!==c.svgType||c.color2?"":`, #${x} [data-color="1"] `} { fill: ${t}; }`;
                return {
                    image: w($(S(function(e, t) {
                        if (!e) return e;
                        const r = e.match(g);
                        if (r) {
                            let n = r[0];
                            const o = n.match(/id="[-\w]+"/);
                            n = o ? n.replace(o[0], `id="${t}"`) : n.replace("<svg ", `<svg id="${t}" `), e = e.replace(r[0], n)
                        }
                        return e
                    }(M, x), O), {
                        width: v.toFixed(2),
                        height: y.toFixed(2)
                    })),
                    size: (o ? Math.ceil(v * parseInt(n, 10) / y) + "px" : (1 / (u + 1) * 100).toFixed(2) + "%") + " 100%"
                }
            };
            t.getFontFamilyFontsFromSvg = e => {
                const t = /font-family=['"](.*?)['"]/gi;
                let r;
                const n = [];
                do {
                    if (r = t.exec(e), r && r[1]) {
                        const e = r[1].split(",").map(e => e.replace(/'/g, "").trim());
                        n.push(e)
                    }
                } while (r);
                return n
            };
            t.buildSvgUrlFactory = () => {
                const e = e => {
                    return ((t = e).endsWith("/") ? t : t + "/") + "shapes/";
                    var t
                };
                return {
                    getSvgBaseUrl: e,
                    buildSvgUrl: (t, r) => {
                        if (/^svgshape\.v[12]/.test(r)) {
                            const n = (e => {
                                const t = e.replace(/^.*\//, "").split("."),
                                    r = "v1" === t[1] ? 1 : 2,
                                    n = t[2].replace(/svg_/i, ""),
                                    o = t[3];
                                return n + (1 === r ? "_svgshape.v1." + o : "") + ".svg"
                            })(r);
                            return `${e(t)}${n}`
                        }
                        return `${e(t)}${r}`
                    }
                }
            }
        },
        1441: function(e, t, r) {
            "use strict";
            var n = r(2623),
                o = r(2627),
                a = [].slice,
                l = ["keyword", "gray", "hex"],
                i = {};
            Object.keys(o).forEach((function(e) {
                i[a.call(o[e].labels).sort().join("")] = e
            }));
            var u = {};

            function s(e, t) {
                if (!(this instanceof s)) return new s(e, t);
                if (t && t in l && (t = null), t && !(t in o)) throw new Error("Unknown model: " + t);
                var r, c;
                if (null == e) this.model = "rgb", this.color = [0, 0, 0], this.valpha = 1;
                else if (e instanceof s) this.model = e.model, this.color = e.color.slice(), this.valpha = e.valpha;
                else if ("string" == typeof e) {
                    var h = n.get(e);
                    if (null === h) throw new Error("Unable to parse color from string: " + e);
                    this.model = h.model, c = o[this.model].channels, this.color = h.value.slice(0, c), this.valpha = "number" == typeof h.value[c] ? h.value[c] : 1
                } else if (e.length) {
                    this.model = t || "rgb", c = o[this.model].channels;
                    var f = a.call(e, 0, c);
                    this.color = g(f, c), this.valpha = "number" == typeof e[c] ? e[c] : 1
                } else if ("number" == typeof e) e &= 16777215, this.model = "rgb", this.color = [e >> 16 & 255, e >> 8 & 255, 255 & e], this.valpha = 1;
                else {
                    this.valpha = 1;
                    var d = Object.keys(e);
                    "alpha" in e && (d.splice(d.indexOf("alpha"), 1), this.valpha = "number" == typeof e.alpha ? e.alpha : 0);
                    var p = d.sort().join("");
                    if (!(p in i)) throw new Error("Unable to parse color from object: " + JSON.stringify(e));
                    this.model = i[p];
                    var v = o[this.model].labels,
                        y = [];
                    for (r = 0; r < v.length; r++) y.push(e[v[r]]);
                    this.color = g(y)
                }
                if (u[this.model])
                    for (c = o[this.model].channels, r = 0; r < c; r++) {
                        var b = u[this.model][r];
                        b && (this.color[r] = b(this.color[r]))
                    }
                this.valpha = Math.max(0, Math.min(1, this.valpha)), Object.freeze && Object.freeze(this)
            }

            function c(e, t, r) {
                return (e = Array.isArray(e) ? e : [e]).forEach((function(e) {
                        (u[e] || (u[e] = []))[t] = r
                    })), e = e[0],
                    function(n) {
                        var o;
                        return arguments.length ? (r && (n = r(n)), (o = this[e]()).color[t] = n, o) : (o = this[e]().color[t], r && (o = r(o)), o)
                    }
            }

            function h(e) {
                return function(t) {
                    return Math.max(0, Math.min(e, t))
                }
            }

            function f(e) {
                return Array.isArray(e) ? e : [e]
            }

            function g(e, t) {
                for (var r = 0; r < t; r++) "number" != typeof e[r] && (e[r] = 0);
                return e
            }
            s.prototype = {
                toString: function() {
                    return this.string()
                },
                toJSON: function() {
                    return this[this.model]()
                },
                string: function(e) {
                    var t = this.model in n.to ? this : this.rgb(),
                        r = 1 === (t = t.round("number" == typeof e ? e : 1)).valpha ? t.color : t.color.concat(this.valpha);
                    return n.to[t.model](r)
                },
                percentString: function(e) {
                    var t = this.rgb().round("number" == typeof e ? e : 1),
                        r = 1 === t.valpha ? t.color : t.color.concat(this.valpha);
                    return n.to.rgb.percent(r)
                },
                array: function() {
                    return 1 === this.valpha ? this.color.slice() : this.color.concat(this.valpha)
                },
                object: function() {
                    for (var e = {}, t = o[this.model].channels, r = o[this.model].labels, n = 0; n < t; n++) e[r[n]] = this.color[n];
                    return 1 !== this.valpha && (e.alpha = this.valpha), e
                },
                unitArray: function() {
                    var e = this.rgb().color;
                    return e[0] /= 255, e[1] /= 255, e[2] /= 255, 1 !== this.valpha && e.push(this.valpha), e
                },
                unitObject: function() {
                    var e = this.rgb().object();
                    return e.r /= 255, e.g /= 255, e.b /= 255, 1 !== this.valpha && (e.alpha = this.valpha), e
                },
                round: function(e) {
                    return e = Math.max(e || 0, 0), new s(this.color.map(function(e) {
                        return function(t) {
                            return function(e, t) {
                                return Number(e.toFixed(t))
                            }(t, e)
                        }
                    }(e)).concat(this.valpha), this.model)
                },
                alpha: function(e) {
                    return arguments.length ? new s(this.color.concat(Math.max(0, Math.min(1, e))), this.model) : this.valpha
                },
                red: c("rgb", 0, h(255)),
                green: c("rgb", 1, h(255)),
                blue: c("rgb", 2, h(255)),
                hue: c(["hsl", "hsv", "hsl", "hwb", "hcg"], 0, (function(e) {
                    return (e % 360 + 360) % 360
                })),
                saturationl: c("hsl", 1, h(100)),
                lightness: c("hsl", 2, h(100)),
                saturationv: c("hsv", 1, h(100)),
                value: c("hsv", 2, h(100)),
                chroma: c("hcg", 1, h(100)),
                gray: c("hcg", 2, h(100)),
                white: c("hwb", 1, h(100)),
                wblack: c("hwb", 2, h(100)),
                cyan: c("cmyk", 0, h(100)),
                magenta: c("cmyk", 1, h(100)),
                yellow: c("cmyk", 2, h(100)),
                black: c("cmyk", 3, h(100)),
                x: c("xyz", 0, h(100)),
                y: c("xyz", 1, h(100)),
                z: c("xyz", 2, h(100)),
                l: c("lab", 0, h(100)),
                a: c("lab", 1),
                b: c("lab", 2),
                keyword: function(e) {
                    return arguments.length ? new s(e) : o[this.model].keyword(this.color)
                },
                hex: function(e) {
                    return arguments.length ? new s(e) : n.to.hex(this.rgb().round().color)
                },
                rgbNumber: function() {
                    var e = this.rgb().color;
                    return (255 & e[0]) << 16 | (255 & e[1]) << 8 | 255 & e[2]
                },
                luminosity: function() {
                    for (var e = this.rgb().color, t = [], r = 0; r < e.length; r++) {
                        var n = e[r] / 255;
                        t[r] = n <= .03928 ? n / 12.92 : Math.pow((n + .055) / 1.055, 2.4)
                    }
                    return .2126 * t[0] + .7152 * t[1] + .0722 * t[2]
                },
                contrast: function(e) {
                    var t = this.luminosity(),
                        r = e.luminosity();
                    return t > r ? (t + .05) / (r + .05) : (r + .05) / (t + .05)
                },
                level: function(e) {
                    var t = this.contrast(e);
                    return t >= 7.1 ? "AAA" : t >= 4.5 ? "AA" : ""
                },
                isDark: function() {
                    var e = this.rgb().color;
                    return (299 * e[0] + 587 * e[1] + 114 * e[2]) / 1e3 < 128
                },
                isLight: function() {
                    return !this.isDark()
                },
                negate: function() {
                    for (var e = this.rgb(), t = 0; t < 3; t++) e.color[t] = 255 - e.color[t];
                    return e
                },
                lighten: function(e) {
                    var t = this.hsl();
                    return t.color[2] += t.color[2] * e, t
                },
                darken: function(e) {
                    var t = this.hsl();
                    return t.color[2] -= t.color[2] * e, t
                },
                saturate: function(e) {
                    var t = this.hsl();
                    return t.color[1] += t.color[1] * e, t
                },
                desaturate: function(e) {
                    var t = this.hsl();
                    return t.color[1] -= t.color[1] * e, t
                },
                whiten: function(e) {
                    var t = this.hwb();
                    return t.color[1] += t.color[1] * e, t
                },
                blacken: function(e) {
                    var t = this.hwb();
                    return t.color[2] += t.color[2] * e, t
                },
                grayscale: function() {
                    var e = this.rgb().color,
                        t = .3 * e[0] + .59 * e[1] + .11 * e[2];
                    return s.rgb(t, t, t)
                },
                fade: function(e) {
                    return this.alpha(this.valpha - this.valpha * e)
                },
                opaquer: function(e) {
                    return this.alpha(this.valpha + this.valpha * e)
                },
                rotate: function(e) {
                    var t = this.hsl(),
                        r = t.color[0];
                    return r = (r = (r + e) % 360) < 0 ? 360 + r : r, t.color[0] = r, t
                },
                mix: function(e, t) {
                    if (!e || !e.rgb) throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof e);
                    var r = e.rgb(),
                        n = this.rgb(),
                        o = void 0 === t ? .5 : t,
                        a = 2 * o - 1,
                        l = r.alpha() - n.alpha(),
                        i = ((a * l == -1 ? a : (a + l) / (1 + a * l)) + 1) / 2,
                        u = 1 - i;
                    return s.rgb(i * r.red() + u * n.red(), i * r.green() + u * n.green(), i * r.blue() + u * n.blue(), r.alpha() * o + n.alpha() * (1 - o))
                }
            }, Object.keys(o).forEach((function(e) {
                if (-1 === l.indexOf(e)) {
                    var t = o[e].channels;
                    s.prototype[e] = function() {
                        if (this.model === e) return new s(this);
                        if (arguments.length) return new s(arguments, e);
                        var r = "number" == typeof arguments[t] ? t : this.valpha;
                        return new s(f(o[this.model][e].raw(this.color)).concat(r), e)
                    }, s[e] = function(r) {
                        return "number" == typeof r && (r = g(a.call(arguments), t)), new s(r, e)
                    }
                }
            })), e.exports = s
        },
        1442: function(e, t, r) {
            var n = r(2628),
                o = {};
            for (var a in n) n.hasOwnProperty(a) && (o[n[a]] = a);
            var l = e.exports = {
                rgb: {
                    channels: 3,
                    labels: "rgb"
                },
                hsl: {
                    channels: 3,
                    labels: "hsl"
                },
                hsv: {
                    channels: 3,
                    labels: "hsv"
                },
                hwb: {
                    channels: 3,
                    labels: "hwb"
                },
                cmyk: {
                    channels: 4,
                    labels: "cmyk"
                },
                xyz: {
                    channels: 3,
                    labels: "xyz"
                },
                lab: {
                    channels: 3,
                    labels: "lab"
                },
                lch: {
                    channels: 3,
                    labels: "lch"
                },
                hex: {
                    channels: 1,
                    labels: ["hex"]
                },
                keyword: {
                    channels: 1,
                    labels: ["keyword"]
                },
                ansi16: {
                    channels: 1,
                    labels: ["ansi16"]
                },
                ansi256: {
                    channels: 1,
                    labels: ["ansi256"]
                },
                hcg: {
                    channels: 3,
                    labels: ["h", "c", "g"]
                },
                apple: {
                    channels: 3,
                    labels: ["r16", "g16", "b16"]
                },
                gray: {
                    channels: 1,
                    labels: ["gray"]
                }
            };
            for (var i in l)
                if (l.hasOwnProperty(i)) {
                    if (!("channels" in l[i])) throw new Error("missing channels property: " + i);
                    if (!("labels" in l[i])) throw new Error("missing channel labels property: " + i);
                    if (l[i].labels.length !== l[i].channels) throw new Error("channel and label counts mismatch: " + i);
                    var u = l[i].channels,
                        s = l[i].labels;
                    delete l[i].channels, delete l[i].labels, Object.defineProperty(l[i], "channels", {
                        value: u
                    }), Object.defineProperty(l[i], "labels", {
                        value: s
                    })
                }
            l.rgb.hsl = function(e) {
                var t, r, n = e[0] / 255,
                    o = e[1] / 255,
                    a = e[2] / 255,
                    l = Math.min(n, o, a),
                    i = Math.max(n, o, a),
                    u = i - l;
                return i === l ? t = 0 : n === i ? t = (o - a) / u : o === i ? t = 2 + (a - n) / u : a === i && (t = 4 + (n - o) / u), (t = Math.min(60 * t, 360)) < 0 && (t += 360), r = (l + i) / 2, [t, 100 * (i === l ? 0 : r <= .5 ? u / (i + l) : u / (2 - i - l)), 100 * r]
            }, l.rgb.hsv = function(e) {
                var t, r, n, o, a, l = e[0] / 255,
                    i = e[1] / 255,
                    u = e[2] / 255,
                    s = Math.max(l, i, u),
                    c = s - Math.min(l, i, u),
                    h = function(e) {
                        return (s - e) / 6 / c + .5
                    };
                return 0 === c ? o = a = 0 : (a = c / s, t = h(l), r = h(i), n = h(u), l === s ? o = n - r : i === s ? o = 1 / 3 + t - n : u === s && (o = 2 / 3 + r - t), o < 0 ? o += 1 : o > 1 && (o -= 1)), [360 * o, 100 * a, 100 * s]
            }, l.rgb.hwb = function(e) {
                var t = e[0],
                    r = e[1],
                    n = e[2];
                return [l.rgb.hsl(e)[0], 100 * (1 / 255 * Math.min(t, Math.min(r, n))), 100 * (n = 1 - 1 / 255 * Math.max(t, Math.max(r, n)))]
            }, l.rgb.cmyk = function(e) {
                var t, r = e[0] / 255,
                    n = e[1] / 255,
                    o = e[2] / 255;
                return [100 * ((1 - r - (t = Math.min(1 - r, 1 - n, 1 - o))) / (1 - t) || 0), 100 * ((1 - n - t) / (1 - t) || 0), 100 * ((1 - o - t) / (1 - t) || 0), 100 * t]
            }, l.rgb.keyword = function(e) {
                var t = o[e];
                if (t) return t;
                var r, a, l, i = 1 / 0;
                for (var u in n)
                    if (n.hasOwnProperty(u)) {
                        var s = n[u],
                            c = (a = e, l = s, Math.pow(a[0] - l[0], 2) + Math.pow(a[1] - l[1], 2) + Math.pow(a[2] - l[2], 2));
                        c < i && (i = c, r = u)
                    }
                return r
            }, l.keyword.rgb = function(e) {
                return n[e]
            }, l.rgb.xyz = function(e) {
                var t = e[0] / 255,
                    r = e[1] / 255,
                    n = e[2] / 255;
                return [100 * (.4124 * (t = t > .04045 ? Math.pow((t + .055) / 1.055, 2.4) : t / 12.92) + .3576 * (r = r > .04045 ? Math.pow((r + .055) / 1.055, 2.4) : r / 12.92) + .1805 * (n = n > .04045 ? Math.pow((n + .055) / 1.055, 2.4) : n / 12.92)), 100 * (.2126 * t + .7152 * r + .0722 * n), 100 * (.0193 * t + .1192 * r + .9505 * n)]
            }, l.rgb.lab = function(e) {
                var t = l.rgb.xyz(e),
                    r = t[0],
                    n = t[1],
                    o = t[2];
                return n /= 100, o /= 108.883, r = (r /= 95.047) > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116, [116 * (n = n > .008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116) - 16, 500 * (r - n), 200 * (n - (o = o > .008856 ? Math.pow(o, 1 / 3) : 7.787 * o + 16 / 116))]
            }, l.hsl.rgb = function(e) {
                var t, r, n, o, a, l = e[0] / 360,
                    i = e[1] / 100,
                    u = e[2] / 100;
                if (0 === i) return [a = 255 * u, a, a];
                t = 2 * u - (r = u < .5 ? u * (1 + i) : u + i - u * i), o = [0, 0, 0];
                for (var s = 0; s < 3; s++)(n = l + 1 / 3 * -(s - 1)) < 0 && n++, n > 1 && n--, a = 6 * n < 1 ? t + 6 * (r - t) * n : 2 * n < 1 ? r : 3 * n < 2 ? t + (r - t) * (2 / 3 - n) * 6 : t, o[s] = 255 * a;
                return o
            }, l.hsl.hsv = function(e) {
                var t = e[0],
                    r = e[1] / 100,
                    n = e[2] / 100,
                    o = r,
                    a = Math.max(n, .01);
                return r *= (n *= 2) <= 1 ? n : 2 - n, o *= a <= 1 ? a : 2 - a, [t, 100 * (0 === n ? 2 * o / (a + o) : 2 * r / (n + r)), 100 * ((n + r) / 2)]
            }, l.hsv.rgb = function(e) {
                var t = e[0] / 60,
                    r = e[1] / 100,
                    n = e[2] / 100,
                    o = Math.floor(t) % 6,
                    a = t - Math.floor(t),
                    l = 255 * n * (1 - r),
                    i = 255 * n * (1 - r * a),
                    u = 255 * n * (1 - r * (1 - a));
                switch (n *= 255, o) {
                    case 0:
                        return [n, u, l];
                    case 1:
                        return [i, n, l];
                    case 2:
                        return [l, n, u];
                    case 3:
                        return [l, i, n];
                    case 4:
                        return [u, l, n];
                    case 5:
                        return [n, l, i]
                }
            }, l.hsv.hsl = function(e) {
                var t, r, n, o = e[0],
                    a = e[1] / 100,
                    l = e[2] / 100,
                    i = Math.max(l, .01);
                return n = (2 - a) * l, r = a * i, [o, 100 * (r = (r /= (t = (2 - a) * i) <= 1 ? t : 2 - t) || 0), 100 * (n /= 2)]
            }, l.hwb.rgb = function(e) {
                var t, r, n, o, a, l, i, u = e[0] / 360,
                    s = e[1] / 100,
                    c = e[2] / 100,
                    h = s + c;
                switch (h > 1 && (s /= h, c /= h), n = 6 * u - (t = Math.floor(6 * u)), 0 != (1 & t) && (n = 1 - n), o = s + n * ((r = 1 - c) - s), t) {
                    default:
                        case 6:
                        case 0:
                        a = r,
                    l = o,
                    i = s;
                    break;
                    case 1:
                            a = o,
                        l = r,
                        i = s;
                        break;
                    case 2:
                            a = s,
                        l = r,
                        i = o;
                        break;
                    case 3:
                            a = s,
                        l = o,
                        i = r;
                        break;
                    case 4:
                            a = o,
                        l = s,
                        i = r;
                        break;
                    case 5:
                            a = r,
                        l = s,
                        i = o
                }
                return [255 * a, 255 * l, 255 * i]
            }, l.cmyk.rgb = function(e) {
                var t = e[0] / 100,
                    r = e[1] / 100,
                    n = e[2] / 100,
                    o = e[3] / 100;
                return [255 * (1 - Math.min(1, t * (1 - o) + o)), 255 * (1 - Math.min(1, r * (1 - o) + o)), 255 * (1 - Math.min(1, n * (1 - o) + o))]
            }, l.xyz.rgb = function(e) {
                var t, r, n, o = e[0] / 100,
                    a = e[1] / 100,
                    l = e[2] / 100;
                return r = -.9689 * o + 1.8758 * a + .0415 * l, n = .0557 * o + -.204 * a + 1.057 * l, t = (t = 3.2406 * o + -1.5372 * a + -.4986 * l) > .0031308 ? 1.055 * Math.pow(t, 1 / 2.4) - .055 : 12.92 * t, r = r > .0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - .055 : 12.92 * r, n = n > .0031308 ? 1.055 * Math.pow(n, 1 / 2.4) - .055 : 12.92 * n, [255 * (t = Math.min(Math.max(0, t), 1)), 255 * (r = Math.min(Math.max(0, r), 1)), 255 * (n = Math.min(Math.max(0, n), 1))]
            }, l.xyz.lab = function(e) {
                var t = e[0],
                    r = e[1],
                    n = e[2];
                return r /= 100, n /= 108.883, t = (t /= 95.047) > .008856 ? Math.pow(t, 1 / 3) : 7.787 * t + 16 / 116, [116 * (r = r > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116) - 16, 500 * (t - r), 200 * (r - (n = n > .008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116))]
            }, l.lab.xyz = function(e) {
                var t, r, n, o = e[0];
                t = e[1] / 500 + (r = (o + 16) / 116), n = r - e[2] / 200;
                var a = Math.pow(r, 3),
                    l = Math.pow(t, 3),
                    i = Math.pow(n, 3);
                return r = a > .008856 ? a : (r - 16 / 116) / 7.787, t = l > .008856 ? l : (t - 16 / 116) / 7.787, n = i > .008856 ? i : (n - 16 / 116) / 7.787, [t *= 95.047, r *= 100, n *= 108.883]
            }, l.lab.lch = function(e) {
                var t, r = e[0],
                    n = e[1],
                    o = e[2];
                return (t = 360 * Math.atan2(o, n) / 2 / Math.PI) < 0 && (t += 360), [r, Math.sqrt(n * n + o * o), t]
            }, l.lch.lab = function(e) {
                var t, r = e[0],
                    n = e[1];
                return t = e[2] / 360 * 2 * Math.PI, [r, n * Math.cos(t), n * Math.sin(t)]
            }, l.rgb.ansi16 = function(e) {
                var t = e[0],
                    r = e[1],
                    n = e[2],
                    o = 1 in arguments ? arguments[1] : l.rgb.hsv(e)[2];
                if (0 === (o = Math.round(o / 50))) return 30;
                var a = 30 + (Math.round(n / 255) << 2 | Math.round(r / 255) << 1 | Math.round(t / 255));
                return 2 === o && (a += 60), a
            }, l.hsv.ansi16 = function(e) {
                return l.rgb.ansi16(l.hsv.rgb(e), e[2])
            }, l.rgb.ansi256 = function(e) {
                var t = e[0],
                    r = e[1],
                    n = e[2];
                return t === r && r === n ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t / 255 * 5) + 6 * Math.round(r / 255 * 5) + Math.round(n / 255 * 5)
            }, l.ansi16.rgb = function(e) {
                var t = e % 10;
                if (0 === t || 7 === t) return e > 50 && (t += 3.5), [t = t / 10.5 * 255, t, t];
                var r = .5 * (1 + ~~(e > 50));
                return [(1 & t) * r * 255, (t >> 1 & 1) * r * 255, (t >> 2 & 1) * r * 255]
            }, l.ansi256.rgb = function(e) {
                if (e >= 232) {
                    var t = 10 * (e - 232) + 8;
                    return [t, t, t]
                }
                var r;
                return e -= 16, [Math.floor(e / 36) / 5 * 255, Math.floor((r = e % 36) / 6) / 5 * 255, r % 6 / 5 * 255]
            }, l.rgb.hex = function(e) {
                var t = (((255 & Math.round(e[0])) << 16) + ((255 & Math.round(e[1])) << 8) + (255 & Math.round(e[2]))).toString(16).toUpperCase();
                return "000000".substring(t.length) + t
            }, l.hex.rgb = function(e) {
                var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
                if (!t) return [0, 0, 0];
                var r = t[0];
                3 === t[0].length && (r = r.split("").map((function(e) {
                    return e + e
                })).join(""));
                var n = parseInt(r, 16);
                return [n >> 16 & 255, n >> 8 & 255, 255 & n]
            }, l.rgb.hcg = function(e) {
                var t, r = e[0] / 255,
                    n = e[1] / 255,
                    o = e[2] / 255,
                    a = Math.max(Math.max(r, n), o),
                    l = Math.min(Math.min(r, n), o),
                    i = a - l;
                return t = i <= 0 ? 0 : a === r ? (n - o) / i % 6 : a === n ? 2 + (o - r) / i : 4 + (r - n) / i + 4, t /= 6, [360 * (t %= 1), 100 * i, 100 * (i < 1 ? l / (1 - i) : 0)]
            }, l.hsl.hcg = function(e) {
                var t = e[1] / 100,
                    r = e[2] / 100,
                    n = 1,
                    o = 0;
                return (n = r < .5 ? 2 * t * r : 2 * t * (1 - r)) < 1 && (o = (r - .5 * n) / (1 - n)), [e[0], 100 * n, 100 * o]
            }, l.hsv.hcg = function(e) {
                var t = e[1] / 100,
                    r = e[2] / 100,
                    n = t * r,
                    o = 0;
                return n < 1 && (o = (r - n) / (1 - n)), [e[0], 100 * n, 100 * o]
            }, l.hcg.rgb = function(e) {
                var t = e[0] / 360,
                    r = e[1] / 100,
                    n = e[2] / 100;
                if (0 === r) return [255 * n, 255 * n, 255 * n];
                var o, a = [0, 0, 0],
                    l = t % 1 * 6,
                    i = l % 1,
                    u = 1 - i;
                switch (Math.floor(l)) {
                    case 0:
                        a[0] = 1, a[1] = i, a[2] = 0;
                        break;
                    case 1:
                        a[0] = u, a[1] = 1, a[2] = 0;
                        break;
                    case 2:
                        a[0] = 0, a[1] = 1, a[2] = i;
                        break;
                    case 3:
                        a[0] = 0, a[1] = u, a[2] = 1;
                        break;
                    case 4:
                        a[0] = i, a[1] = 0, a[2] = 1;
                        break;
                    default:
                        a[0] = 1, a[1] = 0, a[2] = u
                }
                return o = (1 - r) * n, [255 * (r * a[0] + o), 255 * (r * a[1] + o), 255 * (r * a[2] + o)]
            }, l.hcg.hsv = function(e) {
                var t = e[1] / 100,
                    r = t + e[2] / 100 * (1 - t),
                    n = 0;
                return r > 0 && (n = t / r), [e[0], 100 * n, 100 * r]
            }, l.hcg.hsl = function(e) {
                var t = e[1] / 100,
                    r = e[2] / 100 * (1 - t) + .5 * t,
                    n = 0;
                return r > 0 && r < .5 ? n = t / (2 * r) : r >= .5 && r < 1 && (n = t / (2 * (1 - r))), [e[0], 100 * n, 100 * r]
            }, l.hcg.hwb = function(e) {
                var t = e[1] / 100,
                    r = t + e[2] / 100 * (1 - t);
                return [e[0], 100 * (r - t), 100 * (1 - r)]
            }, l.hwb.hcg = function(e) {
                var t = e[1] / 100,
                    r = 1 - e[2] / 100,
                    n = r - t,
                    o = 0;
                return n < 1 && (o = (r - n) / (1 - n)), [e[0], 100 * n, 100 * o]
            }, l.apple.rgb = function(e) {
                return [e[0] / 65535 * 255, e[1] / 65535 * 255, e[2] / 65535 * 255]
            }, l.rgb.apple = function(e) {
                return [e[0] / 255 * 65535, e[1] / 255 * 65535, e[2] / 255 * 65535]
            }, l.gray.rgb = function(e) {
                return [e[0] / 100 * 255, e[0] / 100 * 255, e[0] / 100 * 255]
            }, l.gray.hsl = l.gray.hsv = function(e) {
                return [0, 0, e[0]]
            }, l.gray.hwb = function(e) {
                return [0, 100, e[0]]
            }, l.gray.cmyk = function(e) {
                return [0, 0, 0, e[0]]
            }, l.gray.lab = function(e) {
                return [e[0], 0, 0]
            }, l.gray.hex = function(e) {
                var t = 255 & Math.round(e[0] / 100 * 255),
                    r = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
                return "000000".substring(r.length) + r
            }, l.rgb.gray = function(e) {
                return [(e[0] + e[1] + e[2]) / 3 / 255 * 100]
            }
        },
        2622: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.generateGradient = t.isValidColor = t.extractRGBA = t.getColorFromCssStyle = t.isHexValue = t.isRgbValues = t.isThemeColor = t.isGreyscale = t.formatColor = t.getColorClass = t.getColorAlpha = t.getHexColor = t.getSplitRgbValuesStringWithoutAlpha = t.getSplitRgbValuesString = t.getFromColorMap = t.splitColor = t.getRGBAColorString = t.extractThemeColor = t.brighten = t.isColor = void 0;
            const n = (0, r(1).__importDefault)(r(1441)),
                o = r(2835);
            t.isColor = e => !!e && /(^#([a-f\d]{3}){1,2}$)|(^rgba?\(\d+(,\d+){2,3}(\.\d+)?\)$)/i.test(e.replace(/\s/g, ""));
            const a = e => !!e && /^\d+(,\d+){2,3}(\.\d+)?$/.test(e.replace(/\s/g, ""));
            t.isRgbValues = a;
            const l = e => !!e && /(^#([a-f\d]{3}){1,2}$)/i.test(e.replace(/\s/g, ""));
            t.isHexValue = l;
            const i = e => (0, t.isColor)(e) ? (0, n.default)(e) : a(e) ? (0, n.default)(`rgba(${e})`) : "transparent" === e ? n.default.rgb(0, 0, 0, 0) : null,
                u = e => /^color_\d+$/.test(e);
            t.isThemeColor = u;
            t.brighten = (e, t = 1) => {
                const r = i(e);
                if (!r) return null;
                const n = r.hsv();
                return n.value(n.value() * t).rgb().string()
            };
            t.getRGBAColorString = (e, t = 1) => {
                try {
                    return "none" === t ? (0, n.default)(h(e)).string() : (0, n.default)(h(e)).alpha(t).string()
                } catch (t) {
                    return e
                }
            };
            t.splitColor = e => (0, n.default)(e).array().join(",");
            t.getSplitRgbValuesString = e => {
                const t = i(e);
                return t ? t.rgb().array().join(",") : null
            };
            t.getSplitRgbValuesStringWithoutAlpha = e => {
                const t = i(e);
                if (!t) return null;
                const {
                    r: r,
                    g: n,
                    b: o
                } = t.object();
                return `${r},${n},${o}`
            };
            t.getColorAlpha = e => {
                const t = i(e);
                return t ? t.alpha() : null
            };
            const s = e => e.replace(new RegExp("[\\[\\]{}]", "g"), "");
            t.extractThemeColor = s;
            const c = (e, t = []) => {
                const [, r] = s(e).split("_"), n = parseInt(r, 10);
                return isNaN(n) ? e : t[n]
            };
            t.getFromColorMap = c;
            t.isGreyscale = e => e.red() === e.green() && e.red() === e.blue() && 255 !== e.red();
            t.getHexColor = e => {
                const t = i(e);
                return t && t.hex().toString()
            };
            t.getColorClass = e => {
                const t = /(color_\d+)/.exec(e);
                return t && t[1]
            };
            const h = e => (0, t.isColor)(e) || void 0 === e ? e : (0, t.isColor)(`rgba(${e})`) ? `rgba(${e})` : (0, t.isColor)(`rgb(${e})`) ? `rgb(${e})` : e.replace(";", ""),
                f = (e, t) => {
                    const r = h(e),
                        o = new n.default(r).alpha(Number(t)),
                        a = o.rgb().toString().replace(/ /g, "");
                    return 1 !== Number(t) ? a : a.replace(/^rgb/, "rgba").replace(")", `,${o.alpha()})`)
                };
            t.formatColor = f;
            t.getColorFromCssStyle = e => {
                const {
                    red: t,
                    green: r,
                    blue: o,
                    alpha: a
                } = e, l = new n.default("#" + [t, r, o].map(e => {
                    const t = e.toString(16);
                    return 1 === t.length ? "0" + t : t
                }).join(""));
                return f(l.toString(), a)
            };
            t.extractRGBA = e => {
                const t = e.match(/rgba\([^)]+\)/);
                return t && t[0] ? t[0] : ""
            };
            t.isValidColor = e => (0, t.isColor)(e) || a(e) || l(e) || u(e);
            t.generateGradient = (e, t, r) => (0, o.generate)(e, {
                alpha: t,
                resolveColor: e => c(e, r)
            })
        },
        2623: function(e, t, r) {
            var n = r(2624),
                o = r(2625),
                a = {};
            for (var l in n) n.hasOwnProperty(l) && (a[n[l]] = l);
            var i = e.exports = {
                to: {},
                get: {}
            };

            function u(e, t, r) {
                return Math.min(Math.max(t, e), r)
            }

            function s(e) {
                var t = e.toString(16).toUpperCase();
                return t.length < 2 ? "0" + t : t
            }
            i.get = function(e) {
                var t, r;
                switch (e.substring(0, 3).toLowerCase()) {
                    case "hsl":
                        t = i.get.hsl(e), r = "hsl";
                        break;
                    case "hwb":
                        t = i.get.hwb(e), r = "hwb";
                        break;
                    default:
                        t = i.get.rgb(e), r = "rgb"
                }
                return t ? {
                    model: r,
                    value: t
                } : null
            }, i.get.rgb = function(e) {
                if (!e) return null;
                var t, r, o, a = [0, 0, 0, 1];
                if (t = e.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)) {
                    for (o = t[2], t = t[1], r = 0; r < 3; r++) {
                        var l = 2 * r;
                        a[r] = parseInt(t.slice(l, l + 2), 16)
                    }
                    o && (a[3] = Math.round(parseInt(o, 16) / 255 * 100) / 100)
                } else if (t = e.match(/^#([a-f0-9]{3,4})$/i)) {
                    for (o = (t = t[1])[3], r = 0; r < 3; r++) a[r] = parseInt(t[r] + t[r], 16);
                    o && (a[3] = Math.round(parseInt(o + o, 16) / 255 * 100) / 100)
                } else if (t = e.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/)) {
                    for (r = 0; r < 3; r++) a[r] = parseInt(t[r + 1], 0);
                    t[4] && (a[3] = parseFloat(t[4]))
                } else {
                    if (!(t = e.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/))) return (t = e.match(/(\D+)/)) ? "transparent" === t[1] ? [0, 0, 0, 0] : (a = n[t[1]]) ? (a[3] = 1, a) : null : null;
                    for (r = 0; r < 3; r++) a[r] = Math.round(2.55 * parseFloat(t[r + 1]));
                    t[4] && (a[3] = parseFloat(t[4]))
                }
                for (r = 0; r < 3; r++) a[r] = u(a[r], 0, 255);
                return a[3] = u(a[3], 0, 1), a
            }, i.get.hsl = function(e) {
                if (!e) return null;
                var t = e.match(/^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/);
                if (t) {
                    var r = parseFloat(t[4]);
                    return [(parseFloat(t[1]) + 360) % 360, u(parseFloat(t[2]), 0, 100), u(parseFloat(t[3]), 0, 100), u(isNaN(r) ? 1 : r, 0, 1)]
                }
                return null
            }, i.get.hwb = function(e) {
                if (!e) return null;
                var t = e.match(/^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/);
                if (t) {
                    var r = parseFloat(t[4]);
                    return [(parseFloat(t[1]) % 360 + 360) % 360, u(parseFloat(t[2]), 0, 100), u(parseFloat(t[3]), 0, 100), u(isNaN(r) ? 1 : r, 0, 1)]
                }
                return null
            }, i.to.hex = function() {
                var e = o(arguments);
                return "#" + s(e[0]) + s(e[1]) + s(e[2]) + (e[3] < 1 ? s(Math.round(255 * e[3])) : "")
            }, i.to.rgb = function() {
                var e = o(arguments);
                return e.length < 4 || 1 === e[3] ? "rgb(" + Math.round(e[0]) + ", " + Math.round(e[1]) + ", " + Math.round(e[2]) + ")" : "rgba(" + Math.round(e[0]) + ", " + Math.round(e[1]) + ", " + Math.round(e[2]) + ", " + e[3] + ")"
            }, i.to.rgb.percent = function() {
                var e = o(arguments),
                    t = Math.round(e[0] / 255 * 100),
                    r = Math.round(e[1] / 255 * 100),
                    n = Math.round(e[2] / 255 * 100);
                return e.length < 4 || 1 === e[3] ? "rgb(" + t + "%, " + r + "%, " + n + "%)" : "rgba(" + t + "%, " + r + "%, " + n + "%, " + e[3] + ")"
            }, i.to.hsl = function() {
                var e = o(arguments);
                return e.length < 4 || 1 === e[3] ? "hsl(" + e[0] + ", " + e[1] + "%, " + e[2] + "%)" : "hsla(" + e[0] + ", " + e[1] + "%, " + e[2] + "%, " + e[3] + ")"
            }, i.to.hwb = function() {
                var e = o(arguments),
                    t = "";
                return e.length >= 4 && 1 !== e[3] && (t = ", " + e[3]), "hwb(" + e[0] + ", " + e[1] + "%, " + e[2] + "%" + t + ")"
            }, i.to.keyword = function(e) {
                return a[e.slice(0, 3)]
            }
        },
        2624: function(e, t, r) {
            "use strict";
            e.exports = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                grey: [128, 128, 128],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                rebeccapurple: [102, 51, 153],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
            }
        },
        2625: function(e, t, r) {
            "use strict";
            var n = r(2626),
                o = Array.prototype.concat,
                a = Array.prototype.slice,
                l = e.exports = function(e) {
                    for (var t = [], r = 0, l = e.length; r < l; r++) {
                        var i = e[r];
                        n(i) ? t = o.call(t, a.call(i)) : t.push(i)
                    }
                    return t
                };
            l.wrap = function(e) {
                return function() {
                    return e(l(arguments))
                }
            }
        },
        2626: function(e, t) {
            e.exports = function(e) {
                return !(!e || "string" == typeof e) && (e instanceof Array || Array.isArray(e) || e.length >= 0 && (e.splice instanceof Function || Object.getOwnPropertyDescriptor(e, e.length - 1) && "String" !== e.constructor.name))
            }
        },
        2627: function(e, t, r) {
            var n = r(1442),
                o = r(2629),
                a = {};
            Object.keys(n).forEach((function(e) {
                a[e] = {}, Object.defineProperty(a[e], "channels", {
                    value: n[e].channels
                }), Object.defineProperty(a[e], "labels", {
                    value: n[e].labels
                });
                var t = o(e);
                Object.keys(t).forEach((function(r) {
                    var n = t[r];
                    a[e][r] = function(e) {
                        var t = function(t) {
                            if (null == t) return t;
                            arguments.length > 1 && (t = Array.prototype.slice.call(arguments));
                            var r = e(t);
                            if ("object" == typeof r)
                                for (var n = r.length, o = 0; o < n; o++) r[o] = Math.round(r[o]);
                            return r
                        };
                        return "conversion" in e && (t.conversion = e.conversion), t
                    }(n), a[e][r].raw = function(e) {
                        var t = function(t) {
                            return null == t ? t : (arguments.length > 1 && (t = Array.prototype.slice.call(arguments)), e(t))
                        };
                        return "conversion" in e && (t.conversion = e.conversion), t
                    }(n)
                }))
            })), e.exports = a
        },
        2628: function(e, t, r) {
            "use strict";
            e.exports = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                grey: [128, 128, 128],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                rebeccapurple: [102, 51, 153],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
            }
        },
        2629: function(e, t, r) {
            var n = r(1442);

            function o(e) {
                var t = function() {
                        for (var e = {}, t = Object.keys(n), r = t.length, o = 0; o < r; o++) e[t[o]] = {
                            distance: -1,
                            parent: null
                        };
                        return e
                    }(),
                    r = [e];
                for (t[e].distance = 0; r.length;)
                    for (var o = r.pop(), a = Object.keys(n[o]), l = a.length, i = 0; i < l; i++) {
                        var u = a[i],
                            s = t[u]; - 1 === s.distance && (s.distance = t[o].distance + 1, s.parent = o, r.unshift(u))
                    }
                return t
            }

            function a(e, t) {
                return function(r) {
                    return t(e(r))
                }
            }

            function l(e, t) {
                for (var r = [t[e].parent, e], o = n[t[e].parent][e], l = t[e].parent; t[l].parent;) r.unshift(t[l].parent), o = a(n[t[l].parent][l], o), l = t[l].parent;
                return o.conversion = r, o
            }
            e.exports = function(e) {
                for (var t = o(e), r = {}, n = Object.keys(t), a = n.length, i = 0; i < a; i++) {
                    var u = n[i];
                    null !== t[u].parent && (r[u] = l(u, t))
                }
                return r
            }
        },
        2630: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isFilterExists = t.getProperties = t.getShadow = t.getFilter = void 0;
            const n = r(2631),
                o = r(2633);
            t.getFilter = function(e, t, r, a) {
                const l = o.filterPresets[t] || [];
                return (0, n.interpolate)(e, l, r || {}, a)
            }, t.getShadow = function(e, t) {
                return (0, n.interpolate)(e, [{
                    key: "shadow",
                    value: t
                }], {})
            }, t.getProperties = function(e, t) {
                const r = o.filterPresets[e] || [];
                return (0, n.getProperties)(r, t || {})
            }, t.isFilterExists = function(e) {
                return e in o.filterPresets
            }
        },
        2631: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getProperties = t.interpolate = void 0;
            const n = r(1),
                o = r(2632);

            function a(e, t) {
                return t || 0 === t ? `${e}="${t}"` : ""
            }

            function l({
                id: e,
                content: t,
                attrs: r = {}
            }) {
                return `<filter id="${e}" color-interpolation-filters="sRGB" ${function(e){return Object.keys(e).map(t=>a(t,e[t])).join(" ")}(r)}>\n    <feComponentTransfer result="srcRGB"/>\n    ${t}\n    <feComponentTransfer/>\n</filter>`
            }

            function i({
                value: e,
                inAttr: t,
                result: r
            }) {
                return `<feColorMatrix type="saturate" values="${e}" ${t?`in="${t}"`:""}${r?`result="${r}"`:""}/>`
            }

            function u({
                value: e,
                inAttr: t,
                result: r
            }) {
                const n = "string" == typeof e ? e : e.color,
                    a = "object" == typeof e && void 0 !== e.opacity ? e.opacity : 1;
                return `<feColorMatrix type="matrix" values="${(0,o.getColor)((0,o.hex2RgbNorm)(n),a)}" ${t?`in="${t}"`:""}${r?`result="${r}"`:""}/>`
            }

            function s({
                value: e,
                inAttr: t
            }) {
                return `<feGaussianBlur stdDeviation="${e}" ${t?`in="${t}"`:""}/>`
            }

            function c({
                value: e,
                inAttr: t,
                result: r
            }) {
                return `<feOffset dx="${e.x}" dy="${e.y}" ${t?`in="${t}"`:""}${r?`result="${r}"`:""}/>`
            }
            const h = {
                    blur: s,
                    saturation: i,
                    contrast: function({
                        value: e
                    }) {
                        return `<feComponentTransfer>${(0,o.getContrast)(e)}</feComponentTransfer>`
                    },
                    brightness: function({
                        value: e,
                        result: t
                    }) {
                        return `<feComponentTransfer ${a("result",t)}>${(0,o.getBrightness)(e)}</feComponentTransfer>`
                    },
                    sepia: function({
                        value: e
                    }) {
                        return `<feColorMatrix type="matrix" values="${(0,o.getSepia)(e)}"/>`
                    },
                    hue: function({
                        value: e
                    }) {
                        return `<feColorMatrix type="hueRotate" values="${e}"/>`
                    },
                    alpha: function({
                        value: e,
                        inAttr: t,
                        result: r
                    }) {
                        return `<feComponentTransfer ${a("in",t)} ${a("result",r)}>${(0,o.getAlpha)(e)}</feComponentTransfer>`
                    }
                },
                f = {
                    blend: function({
                        value: e,
                        inAttr: t,
                        in2Attr: r,
                        result: n
                    }) {
                        return `<feBlend mode="${e}" in="${t}" in2="${r}" ${a("result",n)}/>`
                    },
                    color: u,
                    composite: function({
                        value: e,
                        inAttr: t,
                        in2Attr: r,
                        result: n
                    }) {
                        return `<feComposite operator="${e}" in="${t}" in2="${r}" ${a("result",n)}/>`
                    },
                    tint: function({
                        value: e
                    }) {
                        return `<feColorMatrix type="matrix" values="${(0,o.getTint)((0,o.hex2RgbNorm)(e))}"/>`
                    }
                },
                g = {
                    duotone: function({
                        value: {
                            dark: e,
                            light: t
                        },
                        inAttr: r,
                        result: n
                    }) {
                        return `${i({value:0})}\n<feColorMatrix type="matrix" values="${(0,o.getDoutone)((0,o.hex2RgbNorm)(t),(0,o.hex2RgbNorm)(e))}" ${r?`in="${r}"`:""}${n?`result="${n}"`:""}/>`
                    },
                    shadow: function(e) {
                        var t = e.value,
                            {
                                blurRadius: r,
                                mergeGraphic: o
                            } = t,
                            a = (0, n.__rest)(t, ["blurRadius", "mergeGraphic"]);
                        return `${s({value:r,inAttr:"SourceAlpha"})}\n${c({value:a})}\n${u({value:a})}\n${o?'<feMerge>\n    <feMergeNode/>\n    <feMergeNode in="SourceGraphic"/>\n</feMerge>':""}`
                    },
                    color: u,
                    offset: c
                };

            function d(e, t, r) {
                return "duotone" === e ? {
                    light: "duotoneLight" in r && r.duotoneLight || t.light,
                    dark: "duotoneDark" in r && r.duotoneDark || t.dark
                } : e in r ? r[e] : t
            }
            t.interpolate = function(e, t, r, n) {
                return l({
                    id: e,
                    content: t.map(e => {
                        const {
                            key: t,
                            value: n
                        } = e, l = d(t, n, r), i = Object.assign(Object.assign({}, e), {
                            value: l
                        });
                        return "number" == typeof l ? h[t](i) : "string" == typeof l ? f[t](i) : "luma" === t ? function({
                            value: {
                                dark: e,
                                light: t
                            },
                            result: r
                        }) {
                            return `<feColorMatrix type="matrix" values="${(0,o.getLumaMatrix)(t,e)}" ${r?`result="${r}"`:""}/>`
                        }(i) : "identity" === t ? function({
                            inAttr: e
                        }) {
                            return `<feColorMatrix ${a("in",e)}/>`
                        }(i) : g[t](i)
                    }).join("\n"),
                    attrs: n
                })
            }, t.getProperties = function(e, t) {
                return e.map(e => {
                    const {
                        key: r,
                        value: n
                    } = e;
                    return {
                        [r]: d(r, n, t)
                    }
                })
            }
        },
        2632: function(e, t, r) {
            "use strict";

            function n(e) {
                const [, t, r, n] = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                return {
                    r: parseInt(t, 16),
                    g: parseInt(r, 16),
                    b: parseInt(n, 16)
                }
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLumaMatrix = t.getAlpha = t.getTint = t.getBrightness = t.getSepia = t.getContrast = t.getColor = t.hex2RgbNorm = t.hexToRgb = t.getDoutone = void 0, t.getSepia = function(e) {
                return `${.393+.607*(1-e)} ${.769-.769*(1-e)} ${.189-.189*(1-e)} 0 0\n     ${.349-.349*(1-e)} ${.686+.314*(1-e)} ${.168-.168*(1-e)} 0 0\n     ${.272-.272*(1-e)} ${.534-.534*(1-e)} ${.131+.869*(1-e)} 0 0\n     0 0 0 1 0`
            }, t.getContrast = function(e) {
                return `<feFuncR type="linear" slope="${e}" intercept="${Math.round(100*(-.5*e+.5))/100}"/>\n<feFuncG type="linear" slope="${e}" intercept="${Math.round(100*(-.5*e+.5))/100}"/>\n<feFuncB type="linear" slope="${e}" intercept="${Math.round(100*(-.5*e+.5))/100}"/>`
            }, t.getBrightness = function(e) {
                return `<feFuncR type="linear" slope="${e}" /><feFuncG type="linear" slope="${e}" /><feFuncB type="linear" slope="${e}" />`
            }, t.getTint = function(e) {
                return `${1-e.r} 0 0 0 ${e.r} ${1-e.g} 0 0 0 ${e.g} ${1-e.b} 0 0 0 ${e.b} 0 0 0 1 0`
            }, t.getLumaMatrix = function(e, t) {
                return `${e.r} 0 0 0 ${t.r}\n     ${e.g} 1 0 0 ${t.g}\n     ${e.b} 0 1 0 ${t.b}\n     0 0 0 1 0`
            }, t.getColor = function(e, t = 1) {
                return `0 0 0 0 ${e.r}\n0 0 0 0 ${e.g}\n0 0 0 0 ${e.b}\n0 0 0 ${t} 0`
            }, t.getDoutone = function(e, t) {
                const r = e.r - t.r,
                    n = e.g - t.g,
                    o = e.b - t.b;
                return `${r} 0 0 0 ${t.r} ${n} 0 0 0 ${t.g} ${o} 0 0 0 ${t.b} 0 0 0 1 0`
            }, t.getAlpha = function(e) {
                return `<feFuncA type="linear" slope="${e}" />`
            }, t.hexToRgb = n, t.hex2RgbNorm = function(e) {
                const {
                    r: t,
                    g: r,
                    b: o
                } = n(e);
                return {
                    r: t / 255,
                    g: r / 255,
                    b: o / 255
                }
            }
        },
        2633: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.filterPresets = void 0, t.filterPresets = {
                normal: [{
                    key: "identity",
                    inAttr: "SourceGraphic"
                }],
                ink: [{
                    key: "sepia",
                    value: .3
                }, {
                    key: "contrast",
                    value: 1.5
                }, {
                    key: "brightness",
                    value: 1.1
                }, {
                    key: "saturation",
                    value: 0
                }],
                kennedy: [{
                    key: "saturation",
                    value: 0
                }, {
                    key: "contrast",
                    value: 1.1
                }, {
                    key: "brightness",
                    value: .9
                }],
                feathered: [{
                    key: "saturation",
                    value: .2
                }, {
                    key: "contrast",
                    value: .85
                }, {
                    key: "brightness",
                    value: .9
                }, {
                    key: "tint",
                    value: "#171212"
                }],
                blur: [{
                    key: "blur",
                    value: 2
                }],
                whistler: [{
                    key: "color",
                    value: "#ffffff",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "alpha",
                    value: .4,
                    inAttr: "color",
                    result: "flood_alpha"
                }, {
                    key: "blur",
                    value: 1.8,
                    inAttr: "srcRGB"
                }, {
                    key: "alpha",
                    value: .6,
                    result: "blur_alpha"
                }, {
                    key: "blend",
                    value: "normal",
                    inAttr: "blur_alpha",
                    in2Attr: "srcRGB",
                    result: "source_blur"
                }, {
                    key: "blend",
                    value: "overlay",
                    inAttr: "flood_alpha",
                    in2Attr: "source_blur"
                }, {
                    key: "brightness",
                    value: 1.1
                }, {
                    key: "contrast",
                    value: .9
                }, {
                    key: "saturation",
                    value: .6
                }],
                "3d": [{
                    key: "color",
                    value: "#00ffff",
                    inAttr: "srcRGB",
                    result: "color1"
                }, {
                    key: "blend",
                    value: "lighten",
                    inAttr: "color1",
                    in2Attr: "srcRGB",
                    result: "image_color1"
                }, {
                    key: "offset",
                    value: {
                        x: -3,
                        y: 0
                    },
                    inAttr: "image_color1",
                    result: "image_color1_offset"
                }, {
                    key: "color",
                    value: "#ff0000",
                    inAttr: "srcRGB",
                    result: "color2"
                }, {
                    key: "blend",
                    value: "lighten",
                    inAttr: "color2",
                    in2Attr: "srcRGB",
                    result: "image_color2"
                }, {
                    key: "offset",
                    value: {
                        x: 3,
                        y: 0
                    },
                    inAttr: "image_color2",
                    result: "image_color2_offset"
                }, {
                    key: "blend",
                    value: "darken",
                    inAttr: "image_color1_offset",
                    in2Attr: "image_color2_offset"
                }],
                blueray: [{
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#1b00ff",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "color",
                    in2Attr: "grayscale"
                }],
                lighten: [{
                    key: "color",
                    value: "#ffffff",
                    inAttr: "srcRGB",
                    result: "color"
                }, {
                    key: "alpha",
                    value: .46,
                    inAttr: "color",
                    result: "color_alpha"
                }, {
                    key: "composite",
                    value: "over",
                    inAttr: "color_alpha",
                    in2Attr: "srcRGB"
                }],
                darken: [{
                    key: "brightness",
                    value: .4,
                    result: "brightness"
                }, {
                    key: "blend",
                    value: "darken",
                    inAttr: "brightness",
                    in2Attr: "SourceGraphic"
                }],
                pinkrinse: [{
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#9a1a77",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                redrum: [{
                    key: "contrast",
                    value: .75
                }, {
                    key: "brightness",
                    value: 1.2
                }, {
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#f26552",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                greenwash: [{
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#1c9784",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "color",
                    in2Attr: "grayscale"
                }],
                yellowstreak: [{
                    key: "contrast",
                    value: 2
                }, {
                    key: "brightness",
                    value: 1.1
                }, {
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#ffd200",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                neonsky: [{
                    key: "contrast",
                    value: .8
                }, {
                    key: "duotone",
                    value: {
                        dark: "#800033",
                        light: "#fff200"
                    }
                }, {
                    key: "luma",
                    value: {
                        dark: {
                            r: 0,
                            g: -.1,
                            b: 0
                        },
                        light: {
                            r: 1.2,
                            g: 0,
                            b: 0
                        }
                    }
                }],
                seaweed: [{
                    key: "duotone",
                    value: {
                        dark: "#0b00e9",
                        light: "#00d980"
                    }
                }],
                soledad: [{
                    key: "brightness",
                    value: 1.1
                }, {
                    key: "contrast",
                    value: .9
                }, {
                    key: "saturation",
                    value: .8,
                    result: "saturation"
                }, {
                    key: "color",
                    value: "#fce8d3",
                    inAttr: "SourceGraphic",
                    result: "color1"
                }, {
                    key: "alpha",
                    value: .15,
                    inAttr: "color1",
                    result: "color_alpha"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "color_alpha",
                    in2Attr: "saturation",
                    result: "source"
                }, {
                    key: "color",
                    value: "#fc9f1a",
                    inAttr: "SourceGraphic",
                    result: "color2"
                }, {
                    key: "alpha",
                    value: .23,
                    inAttr: "color2",
                    result: "color_alpha2"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "color_alpha2",
                    in2Attr: "source"
                }],
                sangria: [{
                    key: "brightness",
                    value: .95
                }, {
                    key: "contrast",
                    value: 1.35
                }, {
                    key: "saturation",
                    value: .5,
                    result: "saturation"
                }, {
                    key: "color",
                    value: "#c712e2",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "alpha",
                    value: .08,
                    inAttr: "color",
                    result: "color_alpha"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "color_alpha",
                    in2Attr: "saturation",
                    result: "source"
                }],
                malibu: [{
                    key: "contrast",
                    value: .8
                }, {
                    key: "duotone",
                    value: {
                        dark: "#0045d6",
                        light: "#ffdbc0"
                    }
                }],
                candyfloss: [{
                    key: "contrast",
                    value: .8
                }, {
                    key: "duotone",
                    value: {
                        dark: "#ff0000",
                        light: "#ff9bff"
                    }
                }],
                elmo: [{
                    key: "contrast",
                    value: .8
                }, {
                    key: "duotone",
                    value: {
                        dark: "#ff0000",
                        light: "#cadccc"
                    }
                }],
                unicorn: [{
                    key: "contrast",
                    value: .8
                }, {
                    key: "duotone",
                    value: {
                        dark: "#409ca5",
                        light: "#dfb1bd"
                    }
                }],
                kerouac: [{
                    key: "duotone",
                    value: {
                        dark: "#37312e",
                        light: "#b5a8a2"
                    }
                }],
                koolaid: [{
                    key: "duotone",
                    value: {
                        dark: "#5f00ad",
                        light: "#fdcec1"
                    }
                }],
                hydra: [{
                    key: "duotone",
                    value: {
                        dark: "#f72b3e",
                        light: "#ffeced"
                    }
                }],
                pixie: [{
                    key: "duotone",
                    value: {
                        dark: "#85d3de",
                        light: "#ffe1d5"
                    }
                }],
                nightrain: [{
                    key: "duotone",
                    value: {
                        dark: "#2f3c6d",
                        light: "#8e96b5"
                    }
                }],
                bauhaus: [{
                    key: "duotone",
                    value: {
                        dark: "#002787",
                        light: "#e8e8e8"
                    }
                }],
                neptune: [{
                    key: "duotone",
                    value: {
                        dark: "#0a7eff",
                        light: "#e5defa"
                    }
                }],
                orca: [{
                    key: "saturation",
                    value: .2
                }, {
                    key: "contrast",
                    value: .85
                }, {
                    key: "brightness",
                    value: .9
                }, {
                    key: "tint",
                    value: "#2b524c"
                }],
                manhattan: [{
                    key: "saturation",
                    value: .2
                }, {
                    key: "contrast",
                    value: .85
                }, {
                    key: "brightness",
                    value: .9
                }, {
                    key: "tint",
                    value: "#211c0f"
                }],
                goldie: [{
                    key: "saturation",
                    value: .2
                }, {
                    key: "contrast",
                    value: .85
                }, {
                    key: "brightness",
                    value: .9
                }, {
                    key: "tint",
                    value: "#a6966e"
                }],
                flamingo: [{
                    key: "saturation",
                    value: .2
                }, {
                    key: "contrast",
                    value: .85
                }, {
                    key: "brightness",
                    value: .9
                }, {
                    key: "tint",
                    value: "#ff4283"
                }],
                faded: [{
                    key: "saturation",
                    value: .2
                }, {
                    key: "contrast",
                    value: .85
                }, {
                    key: "brightness",
                    value: .9
                }, {
                    key: "tint",
                    value: "#dcdddc"
                }],
                gotham: [{
                    key: "brightness",
                    value: .95
                }, {
                    key: "contrast",
                    value: 1.35
                }, {
                    key: "saturation",
                    value: .5,
                    result: "saturation"
                }, {
                    key: "color",
                    value: "#93676f",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "alpha",
                    value: .08,
                    inAttr: "color",
                    result: "color_alpha"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "color_alpha",
                    in2Attr: "saturation",
                    result: "source"
                }],
                hulk: [{
                    key: "contrast",
                    value: .75
                }, {
                    key: "brightness",
                    value: 1.2
                }, {
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#b5c900",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                midnight: [{
                    key: "contrast",
                    value: .75
                }, {
                    key: "brightness",
                    value: 1.2
                }, {
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#00254b",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                lucille: [{
                    key: "contrast",
                    value: .75
                }, {
                    key: "brightness",
                    value: 1.2
                }, {
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#d60000",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                organic: [{
                    key: "contrast",
                    value: .75
                }, {
                    key: "brightness",
                    value: 1.2
                }, {
                    key: "saturation",
                    value: 0,
                    result: "grayscale"
                }, {
                    key: "color",
                    value: "#debda5",
                    inAttr: "SourceGraphic",
                    result: "color"
                }, {
                    key: "blend",
                    value: "multiply",
                    inAttr: "grayscale",
                    in2Attr: "color"
                }],
                grayscale: [{
                    key: "brightness",
                    value: 1
                }, {
                    key: "contrast",
                    value: 1
                }, {
                    key: "duotone",
                    value: {
                        dark: "#000000",
                        light: "#ffffff"
                    }
                }],
                tvDuotone: [{
                    key: "brightness",
                    value: .9
                }, {
                    key: "contrast",
                    value: 1.5
                }, {
                    key: "duotone",
                    value: {
                        dark: "@color_23",
                        light: "@color_18"
                    }
                }],
                tvMonotoneDark: [{
                    key: "brightness",
                    value: 1.2
                }, {
                    key: "contrast",
                    value: 1
                }, {
                    key: "duotone",
                    value: {
                        dark: "#000000",
                        light: "@color_8"
                    }
                }],
                tvMonotoneLight: [{
                    key: "brightness",
                    value: 1
                }, {
                    key: "contrast",
                    value: 1
                }, {
                    key: "duotone",
                    value: {
                        dark: "@color_8",
                        light: "#ffffff"
                    }
                }],
                tvHue: [{
                    key: "hue",
                    value: -60
                }, {
                    key: "saturation",
                    value: 1
                }]
            }
        },
        2634: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseSvgString = void 0;
            const n = "shape",
                o = "ugc",
                a = /fill="(.*?)"/g,
                l = /data-color="(.*?)"/g,
                i = /data-type="(.*?)"/g,
                u = /data-bbox="(.*?)"/g,
                s = /width="(.*?)"/g,
                c = /height="(.*?)"/g,
                h = /viewBox="(.*?)"/g,
                f = /(<svg(.*?)>)/g,
                g = /(<path(.*?)>)/g,
                d = e => {
                    const t = e.split(" ");
                    return {
                        x: t[0],
                        y: t[1],
                        width: t[2],
                        height: t[3]
                    }
                },
                p = (e, t, r) => {
                    const n = t.exec(e);
                    return n ? [n[1], ...p(e, t, r)] : r ? [r] : []
                },
                v = (e, t) => {
                    if (e === o) {
                        const [e] = p(t, s), [r] = p(t, c);
                        if (e && r) return `0 0 ${e} ${r}`
                    }
                    return ""
                };
            t.parseSvgString = e => {
                const [t] = p(e, f), r = p(e, g), [o] = p(t, i, n), [s] = p(t, h).concat([v(o, t)]), [c] = p(t, u) || "";
                return {
                    content: e,
                    info: Object.assign(Object.assign({}, r.reduce((e, t) => {
                        const [r] = p(t, l), [n] = p(t, a);
                        return e["color" + r] = n, e
                    }, {})), {
                        svgType: o,
                        viewBox: s,
                        bbox: c
                    }),
                    boxBoundaries: c ? d(c) : {}
                }
            }
        },
        2635: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compIdToCssSelector = t.isDefaultCompId = t.getDefaultCompId = t.getHoverCompId = t.HOVER_DATA_MODE = t.DEFAULT_DATA_MODE = t.HOVER_SUFFIX = t.MODES_TYPE = void 0, t.MODES_TYPE = {
                hover: "HOVER",
                default: "DEFAULT"
            }, t.HOVER_SUFFIX = ":hover", t.DEFAULT_DATA_MODE = "[data-mode=default]", t.HOVER_DATA_MODE = "[data-mode=hover]";
            t.getHoverCompId = e => `${e}${t.HOVER_SUFFIX}`;
            t.getDefaultCompId = e => e ? e.replace(t.HOVER_SUFFIX, "") : e;
            t.isDefaultCompId = e => !e.endsWith(t.HOVER_SUFFIX);
            t.compIdToCssSelector = (e, r) => {
                const n = (0, t.getDefaultCompId)(e),
                    o = r ? "#<%= compId %>" : "#" + e;
                return e.endsWith(t.HOVER_SUFFIX) ? `${t.HOVER_DATA_MODE} #${n}` : o
            }
        },
        2835: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, "wrgba2hex_a", (function() {
                return k
            })), r.d(t, "generate", (function() {
                return y
            })), r.d(t, "validate", (function() {
                return b
            }));
            const n = {
                    TYPES: {
                        GRADIENT_LINEAR: "GradientLinear",
                        GRADIENT_ELLIPSE: "GradientEllipse",
                        GRADIENT_CIRCLE: "GradientCircle",
                        GRADIENT_CONIC: "GradientConic"
                    },
                    CSS_FUNC: {
                        RADIAL_GRADIENT: "radial-gradient",
                        CONIC_GRADIENT: "conic-gradient",
                        LINEAR_GRADIENT: "linear-gradient"
                    },
                    REPEATING: "repeating",
                    DEG: "deg",
                    AT_CENTER: "at center",
                    CIRCLE: "circle",
                    ELLIPSE: "ellipse",
                    FROM: "from",
                    PERCENTAGE: "percentage",
                    RGBA: "rgba"
                },
                {
                    GRADIENT_LINEAR: o,
                    GRADIENT_CONIC: a,
                    GRADIENT_CIRCLE: l
                } = n.TYPES,
                {
                    RADIAL_GRADIENT: i,
                    CONIC_GRADIENT: u,
                    LINEAR_GRADIENT: s
                } = n.CSS_FUNC,
                {
                    REPEATING: c,
                    DEG: h,
                    AT_CENTER: f,
                    CIRCLE: g,
                    ELLIPSE: d,
                    FROM: p,
                    PERCENTAGE: v
                } = n;

            function y(e = [], t = {}) {
                return Array.isArray(e) || (e = Array.isArray(e.gradients) ? e.gradients : [e]), e.map(e => function(e, t) {
                    const r = e.repeat ? c + "-" : "",
                        n = function(e) {
                            if (e.type === o) return function({
                                angle: e = 0
                            }) {
                                const t = $(e, ", ");
                                return `${s}(${t}`
                            }(e);
                            if (e.type === a) return function({
                                angle: e = 0,
                                position: t,
                                type: r
                            }) {
                                const n = x(t, r),
                                    o = $(e);
                                return `${u}(${p} ${o}${t?" ":", "}${n}`
                            }(e);
                            return function({
                                size: e,
                                position: t,
                                type: r
                            }) {
                                const n = function(e) {
                                        if (!e) return "";
                                        if (e.keyword) return e.keyword + " ";
                                        if (e.width) {
                                            const t = w(e.width),
                                                r = w(e.height);
                                            return `${t} ${r} `
                                        }
                                        if (e.type === v) return e.value + "% ";
                                        return `${e.value}${e.type} `
                                    }(e),
                                    o = x(t, r);
                                return `${i}(${r===l?g:d} ${n}${o}`
                            }(e)
                        }(e),
                        h = function(e = [], t) {
                            return e.map(e => function({
                                color: e,
                                opacity: t,
                                size: r
                            }, {
                                alpha: n = 1,
                                resolveColor: o
                            }) {
                                let a = "",
                                    l = "";
                                if (e)
                                    if (o && (e = o(e)), function(e) {
                                            return /^#(?:[0-9a-fA-F]{3}){1,2}$/i.test(e)
                                        }(e)) null != t || (t = 1), a = t * n < 1 ? m(e, t * n) : e;
                                    else if (function(e) {
                                        return /^(\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3}),\s*(\d*(?:\.\d+)?)$/.test(e)
                                    }(e)) {
                                    const [r, o] = k(e);
                                    null != t || (t = o), a = m(r, t * n)
                                } else a = e;
                                if (r) {
                                    const {
                                        type: e,
                                        value: t
                                    } = r;
                                    l = e === v ? t + "%" : `${t}${e}`
                                }
                                if (e && r) return `${a} ${l}`;
                                if (e) return a;
                                return l
                            }(e, t)).join(", ")
                        }(e.colorStops, t);
                    return `${r}${n}${h})`
                }(e, t)).join(", ")
            }

            function b(e = []) {
                e ? Array.isArray(e) || (e = Array.isArray(e.gradients) ? e.gradients : [e]) : e = [];
                const t = Object.values(n.TYPES);
                return e.length && e.every(e => e && t.includes(e.type) && e.colorStops && e.colorStops.length)
            }

            function m(e, t = 1) {
                const r = 4 === e.length,
                    n = r ? /\w/g : /\w\w/g,
                    [o, a, l, i = 255] = e.match(n).map(e => parseInt(e.repeat(r ? 2 : 1), 16));
                return `rgba(${o},${a},${l},${i/255*t})`
            }

            function k(e) {
                const [t, r, n, o] = e.split(/,\s*/);
                return ["#" + ((1 << 24) + (+t << 16) + (+r << 8) + +n).toString(16).slice(1).toUpperCase(), +o]
            }

            function w({
                type: e,
                value: t
            }) {
                return e === v ? t + "%" : `${t}${e}`
            }

            function $(e, t = "") {
                return `${e}${h}${t}`
            }

            function x(e, t) {
                if (!e) return t === a ? "" : f + ", ";
                return `at ${w(e.x)} ${w(e.y)}, `
            }
        },
        3865: function(e, t, r) {
            "use strict";
            var n = r(1193),
                o = r(491),
                a = r(69),
                l = r(39),
                i = r(80),
                u = r(83),
                s = r(84),
                c = r(62),
                h = r(60),
                f = r(1246),
                g = r(1654);
            const d = (e, t) => {
                    const {
                        info: r
                    } = n.parseSvgString(e);
                    return n.transformVectorImage(e, Object.assign(Object.assign({}, t), {
                        svgInfo: r
                    }))
                },
                p = Object(a.b)(({
                    setProps: e,
                    setStyles: t,
                    sdkData: r,
                    metaData: n,
                    createSdkState: a,
                    handlers: l
                }) => {
                    const [i, u] = a({});
                    return {
                        get src() {
                            return i.userSrc || Object(o.e)(r.svgId, r.altText)
                        },
                        set src(n) {
                            u({
                                userSrc: n
                            });
                            const {
                                type: a
                            } = Object(o.i)(n, r.mediaSvgUrl), i = [o.b, o.c].includes(a);
                            t((e => e ? {
                                "--stroke-width": "unset",
                                "--stroke": "unset"
                            } : {})(i)), e(Object(o.h)(n, r.mediaSvgUrl, l.sanitizeSVG).then(e => ((e, t, r, n) => e === o.b ? {
                                svgContent: t,
                                shouldScaleStroke: r
                            } : {
                                svgContent: Object(o.g)(t) ? t : d(t, n),
                                shouldScaleStroke: r
                            })(a, e, i, r)))
                        },
                        toJSON() {
                            const {
                                src: e
                            } = this;
                            return Object.assign(Object.assign({}, Object(h.c)(n)), {
                                src: e
                            })
                        }
                    }
                }, {
                    type: ["object"],
                    properties: {
                        src: {
                            type: ["string"]
                        }
                    }
                }, {
                    src: [e => (l.a.isSVG(e) || Object(i.d)(u.b.invalidSvgValue(e)), !0)]
                }),
                v = Object(s.a)(Object(h.a)(), f.a, g.a, p);
            t.a = Object(c.a)(v)
        },
        4180: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, "components", (function() {
                return n
            })), r.d(t, "version", (function() {
                return o
            }));
            const n = {
                    VectorImage: {
                        sdk: r(3865).a
                    }
                },
                o = "1.0.0"
        },
        491: function(e, t, r) {
            "use strict";
            r.d(t, "a", (function() {
                return o
            })), r.d(t, "b", (function() {
                return a
            })), r.d(t, "d", (function() {
                return l
            })), r.d(t, "c", (function() {
                return i
            })), r.d(t, "e", (function() {
                return c
            })), r.d(t, "i", (function() {
                return h
            })), r.d(t, "f", (function() {
                return f
            })), r.d(t, "h", (function() {
                return g
            })), r.d(t, "g", (function() {
                return d
            }));
            var n = r(39);
            const o = "<svg data-failed />",
                a = "inline",
                l = "wixMedia",
                i = "url",
                u = /^wix:vector:\/\/v1\//,
                s = /^wix:vector:\/\/v1\/[0-9|a-z|_]+.svg/,
                c = (e, t) => `wix:vector://v1/${e}/${t?encodeURIComponent(t):""}`,
                h = (e, t) => {
                    if (n.a.isWixSVGShape(e)) return ((e, t) => {
                        const [r] = e.replace(u, "").split("/"), n = (e => {
                            const [, t, r, n] = e.replace(/^.*\//, "").split("."), o = "v1" === t ? 1 : 2;
                            return r.replace(/svg_/i, "") + (1 === o ? "_svgshape.v1." + n : "") + ".svg"
                        })(r);
                        return {
                            type: l,
                            data: `${t}/${n}`
                        }
                    })(e, t);
                    const r = (e => {
                        const [t] = s.exec(e) || [];
                        return t
                    })(e);
                    if (r) {
                        const e = r.replace(u, "");
                        return {
                            type: l,
                            data: `${t}${e}`
                        }
                    }
                    return n.a.isInlineSvg(e) ? {
                        type: a,
                        data: e
                    } : {
                        type: i,
                        data: e
                    }
                },
                f = async e => {
                    try {
                        const t = await fetch(e);
                        if (t.ok) return t.text()
                    } catch (e) {}
                    return o
                },
                g = async (e, t, r) => {
                    const {
                        type: n,
                        data: i
                    } = h(e, t);
                    if (n === a) return i;
                    let u = await f(i);
                    if (!d(u) && n !== l) try {
                        const {
                            svg: e
                        } = await r(u);
                        u = e || o
                    } catch (e) {
                        u = o
                    }
                    return u
                },
                d = e => e === o
        },
        62: function(e, t, r) {
            "use strict";

            function n(e) {
                return {
                    factory: e
                }
            }
            r.d(t, "a", (function() {
                return n
            }))
        }
    })
}));
//# sourceMappingURL=https://static.parastorage.com/services/editor-elements/dist/rb_wixui.corvid[VectorImage].dcfab0b3.bundle.min.js.map